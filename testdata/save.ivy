# Copyright 2015 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Saving.

# Initial configuration.
)save "<conf.out>"
	)prec 256
	)maxbits 1000000000
	)maxdigits 10000
	)origin 1
	)prompt ""
	)format ""
	# Set base 10 for parsing numbers.
	)base 10
	e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035355
	pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
	)ibase 0
	)obase 0

# Variables.
x00 = 3
x01 = 1/3
x02 = sqrt 3
x04 = iota 5
x05 = 3 4 rho iota 12
x06 = 'x'
x07 = 'abc'
x08 = 1 'x' 2
x09 = 1j2
x10 = 1 (2 3) (4 5)
x11 = 3 4 rho iota 12
x11[2;2] = 2 2 rho 6
)save "<conf.out>"
	)prec 256
	)maxbits 1000000000
	)maxdigits 10000
	)origin 1
	)prompt ""
	)format ""
	# Set base 10 for parsing numbers.
	)base 10
	e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035355
	pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
	x00 = 3
	x01 = 1/3
	x02 = 1.7320508075688772935274463415058723669428052538103806280558069794519330169088
	x04 = 1 2 3 4 5
	x05 = 3 4 rho 1 2 3 4 5 6 7 8 9 10 11 12
	x06 = 'x'
	x07 = "abc"
	x08 = 1 'x' 2
	x09 = 1j2
	x10 = 1 (2 3) (4 5)
	x11 = 3 4 rho 1 2 3 4 5 (2 2 rho 6 6 6 6) 7 8 9 10 11 12
	)ibase 0
	)obase 0

# Simple definitions.
op avg x = (+/x) / rho x
op roll x = x?100
)save "<conf.out>"
	)prec 256
	)maxbits 1000000000
	)maxdigits 10000
	)origin 1
	)prompt ""
	)format ""
	op avg x = (+/ x) / rho x
	op roll x = x ? 100
	# Set base 10 for parsing numbers.
	)base 10
	e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035355
	pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
	)ibase 0
	)obase 0

# Mutual recursion.
op m1 n
op m2 n = iota m1 n
op m1 n = n
)save "<conf.out>"
	)prec 256
	)maxbits 1000000000
	)maxdigits 10000
	)origin 1
	)prompt ""
	)format ""
	op m1 _
	op m2 n = iota m1 n
	op m1 n = n
	# Set base 10 for parsing numbers.
	)base 10
	e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035355
	pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
	)ibase 0
	)obase 0

# Test that we can see variables and ops created by reading from a file.
)get "testdata/saved"
x
avg x
	1 2 3 4 5 6 7
	4

# Indexing operations
op g x = x
op f x = x[1 2; g 3 4; 5 6]
)save "<conf.out>"
	)prec 256
	)maxbits 1000000000
	)maxdigits 10000
	)origin 1
	)prompt ""
	)format ""
	op g x = x
	op f x = x[1 2; g 3 4; 5 6]
	# Set base 10 for parsing numbers.
	)base 10
	e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035355
	pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
	)ibase 0
	)obase 0

# Multiline function definitions.
op f x =
 x==1: 2
 x

op g x = x
)save "<conf.out>"
	)prec 256
	)maxbits 1000000000
	)maxdigits 10000
	)origin 1
	)prompt ""
	)format ""
	op f x =
		(x == 1) : 2
		x

	op g x = x
	# Set base 10 for parsing numbers.
	)base 10
	e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035355
	pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
	)ibase 0
	)obase 0
